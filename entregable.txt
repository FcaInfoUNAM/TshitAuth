Milton Quiroz

1.
En el modelo de usuario (User), se utiliza un método separado llamado setId para 
asignar un identificador (id) al objeto de usuario. Este enfoque se utiliza comúnmente 
para garantizar que la asignación del identificador sea coherente y controlada.

2.
Escribimos y pasamos passwd y passwd2 para permitir al cliente enviar la contraseña dos veces 
durante el proceso de registro. La razón principal de esto es asegurarse de que el usuario
haya ingresado correctamente su contraseña y para confirmar que no hay errores tipográficos o 
discrepancias entre las contraseñas ingresadas. Esta práctica ayuda a mejorar la seguridad y 
la experiencia del usuario al garantizar que la contraseña sea ingresada correctamente.

3.
authKey = request.args.get("authKey"): Esta línea obtiene el valor del parámetro authKey de la URL. Este parámetro se utiliza para pasar la clave de autenticación del usuario.
if not(ctrl.kerberos(authKey)):: Utiliza el método kerberos() del controlador CtrlProveedor para verificar si el usuario está autenticado. Si el usuario no está autenticado, devuelve False, lo que significa que no tiene acceso. En ese caso, se devuelve un mensaje de "no autorizado" con un código de estado 409.
get = ctrl.getAll(): Si el usuario está autenticado, se llama al método getAll() del controlador CtrlProveedor para obtener todos los proveedores.
if(get["get"]["code"]!=200): Se verifica si la respuesta del método getAll() tiene un código de estado diferente de 200. Si es así, significa que ocurrió un error al obtener los proveedores, y se devuelve el mensaje de error junto con el código de estado recibido.
return json.dumps((get["data"])),200: Si no se producen errores, se devuelve la lista de proveedores en formato JSON junto con un código de estado 200, lo que indica que la solicitud se ha procesado correctamente.